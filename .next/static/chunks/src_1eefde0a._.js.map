{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;KARS","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/portfolio/AssetAllocation.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card'\r\n\r\nimport { Skeleton } from \"../ui/skeleton\";\r\nimport { Alert, AlertDescription } from \"../ui/alert\";\r\nimport { AlertCircle } from \"lucide-react\";\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from \"recharts\";\r\n\r\ninterface AllocationData {\r\n  bySector: Record<string, { value: number; percentage: number }>;\r\n  byMarketCap: Record<string, { value: number; percentage: number }>;\r\n}\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D', '#FFC658'];\r\n\r\nexport default function AssetAllocation() {\r\n  const [allocation, setAllocation] = useState<AllocationData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchAllocation();\r\n  }, []);\r\n\r\n  const fetchAllocation = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/portfolio/allocation\");\r\n      if (!response.ok) throw new Error(\"Failed to fetch allocation data\");\r\n      const data = await response.json();\r\n      setAllocation(data);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Unknown error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat(\"en-IN\", {\r\n      style: \"currency\",\r\n      currency: \"INR\",\r\n      maximumFractionDigits: 0,\r\n    }).format(value);\r\n  };\r\n\r\n  const formatPercent = (value: number) => {\r\n    return `${value.toFixed(1)}%`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <Skeleton className=\"h-4 w-32\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Skeleton className=\"h-64 w-full\" />\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <Skeleton className=\"h-4 w-32\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Skeleton className=\"h-64 w-full\" />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"destructive\">\r\n        <AlertCircle className=\"h-4 w-4\" />\r\n        <AlertDescription>{error}</AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (!allocation) return null;\r\n\r\n  const sectorData = Object.entries(allocation.bySector).map(([name, data]) => ({\r\n    name,\r\n    value: data.value,\r\n    percentage: data.percentage,\r\n  }));\r\n\r\n  const marketCapData = Object.entries(allocation.byMarketCap).map(([name, data]) => ({\r\n    name,\r\n    value: data.value,\r\n    percentage: data.percentage,\r\n  }));\r\n\r\n  const CustomTooltip = ({ active, payload }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-background border rounded-lg p-3 shadow-lg\">\r\n          <p className=\"font-medium\">{payload[0].name}</p>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Value: {formatCurrency(payload[0].payload.value)}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Percentage: {formatPercent(payload[0].payload.percentage)}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Sector Distribution</CardTitle>\r\n          <CardDescription>Portfolio allocation by industry sectors</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"h-64\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={sectorData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  labelLine={false}\r\n                  label={({ name, percentage }) => `${name} ${formatPercent(percentage)}`}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                >\r\n                  {sectorData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip content={<CustomTooltip />} />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Market Cap Distribution</CardTitle>\r\n          <CardDescription>Portfolio allocation by market capitalization</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"h-64\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={marketCapData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  labelLine={false}\r\n                  label={({ name, percentage }) => `${name} ${formatPercent(percentage)}`}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                >\r\n                  {marketCapData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip content={<CustomTooltip />} />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 870, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 902, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/portfolio/HoldingsTable.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../ui/card\";\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"../ui/table\";\r\nimport { Input } from \"../ui/input\";\r\nimport { Badge } from \"../ui/badge\";\r\nimport { Skeleton } from \"../ui/skeleton\";\r\nimport { Alert, AlertDescription } from \"../ui/alert\";\r\nimport { AlertCircle, Search, ArrowUpDown, ArrowUp, ArrowDown } from \"lucide-react\";\r\n\r\ninterface Holding {\r\n  symbol: string;\r\n  name: string;\r\n  quantity: number;\r\n  avgPrice: number;\r\n  currentPrice: number;\r\n  sector: string;\r\n  marketCap: string;\r\n  value: number;\r\n  gainLoss: number;\r\n  gainLossPercent: number;\r\n}\r\n\r\ntype SortField = keyof Holding;\r\ntype SortDirection = \"asc\" | \"desc\";\r\n\r\nexport default function HoldingsTable() {\r\n  const [holdings, setHoldings] = useState<Holding[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortField, setSortField] = useState<SortField>(\"symbol\");\r\n  const [sortDirection, setSortDirection] = useState<SortDirection>(\"asc\");\r\n\r\n  useEffect(() => {\r\n    fetchHoldings();\r\n  }, []);\r\n\r\n  const fetchHoldings = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/portfolio/holdings\");\r\n      if (!response.ok) throw new Error(\"Failed to fetch holdings\");\r\n      const data = await response.json();\r\n      setHoldings(data);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Unknown error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat(\"en-IN\", {\r\n      style: \"currency\",\r\n      currency: \"INR\",\r\n      maximumFractionDigits: 0,\r\n    }).format(value);\r\n  };\r\n\r\n  const formatPercent = (value: number) => {\r\n    return `${value.toFixed(2)}%`;\r\n  };\r\n\r\n  const handleSort = (field: SortField) => {\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection(\"asc\");\r\n    }\r\n  };\r\n\r\n  const filteredAndSortedHoldings = useMemo(() => {\r\n    let filtered = holdings.filter(holding =>\r\n      holding.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      holding.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      holding.sector.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    filtered.sort((a, b) => {\r\n      const aValue = a[sortField];\r\n      const bValue = b[sortField];\r\n      \r\n      if (typeof aValue === \"number\" && typeof bValue === \"number\") {\r\n        return sortDirection === \"asc\" ? aValue - bValue : bValue - aValue;\r\n      }\r\n      \r\n      if (typeof aValue === \"string\" && typeof bValue === \"string\") {\r\n        return sortDirection === \"asc\" \r\n          ? aValue.localeCompare(bValue)\r\n          : bValue.localeCompare(aValue);\r\n      }\r\n      \r\n      return 0;\r\n    });\r\n\r\n    return filtered;\r\n  }, [holdings, searchTerm, sortField, sortDirection]);\r\n\r\n  const getSortIcon = (field: SortField) => {\r\n    if (sortField !== field) return <ArrowUpDown className=\"h-4 w-4\" />;\r\n    return sortDirection === \"asc\" ? <ArrowUp className=\"h-4 w-4\" /> : <ArrowDown className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Portfolio Holdings</CardTitle>\r\n          <CardDescription>Your current stock investments</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            <Skeleton className=\"h-10 w-full\" />\r\n            <div className=\"space-y-2\">\r\n              {Array.from({ length: 5 }).map((_, i) => (\r\n                <Skeleton key={i} className=\"h-12 w-full\" />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"destructive\">\r\n        <AlertCircle className=\"h-4 w-4\" />\r\n        <AlertDescription>{error}</AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Portfolio Holdings</CardTitle>\r\n        <CardDescription>Your current stock investments</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\r\n            <Input\r\n              placeholder=\"Search by symbol, name, or sector...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"rounded-md border\">\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50\"\r\n                    onClick={() => handleSort(\"symbol\")}\r\n                  >\r\n                    <div className=\"flex items-center gap-2\">\r\n                      Symbol {getSortIcon(\"symbol\")}\r\n                    </div>\r\n                  </TableHead>\r\n                  <TableHead>Name</TableHead>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50\"\r\n                    onClick={() => handleSort(\"sector\")}\r\n                  >\r\n                    <div className=\"flex items-center gap-2\">\r\n                      Sector {getSortIcon(\"sector\")}\r\n                    </div>\r\n                  </TableHead>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50 text-right\"\r\n                    onClick={() => handleSort(\"quantity\")}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 justify-end\">\r\n                      Qty {getSortIcon(\"quantity\")}\r\n                    </div>\r\n                  </TableHead>\r\n                  <TableHead className=\"text-right\">Avg Price</TableHead>\r\n                  <TableHead className=\"text-right\">Current Price</TableHead>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50 text-right\"\r\n                    onClick={() => handleSort(\"value\")}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 justify-end\">\r\n                      Value {getSortIcon(\"value\")}\r\n                    </div>\r\n                  </TableHead>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50 text-right\"\r\n                    onClick={() => handleSort(\"gainLoss\")}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 justify-end\">\r\n                      Gain/Loss {getSortIcon(\"gainLoss\")}\r\n                    </div>\r\n                  </TableHead>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50 text-right\"\r\n                    onClick={() => handleSort(\"gainLossPercent\")}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 justify-end\">\r\n                      Gain % {getSortIcon(\"gainLossPercent\")}\r\n                    </div>\r\n                  </TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {filteredAndSortedHoldings.map((holding) => (\r\n                  <TableRow key={holding.symbol}>\r\n                    <TableCell className=\"font-medium\">{holding.symbol}</TableCell>\r\n                    <TableCell>{holding.name}</TableCell>\r\n                    <TableCell>\r\n                      <Badge variant=\"outline\">{holding.sector}</Badge>\r\n                    </TableCell>\r\n                    <TableCell className=\"text-right\">{holding.quantity}</TableCell>\r\n                    <TableCell className=\"text-right\">{formatCurrency(holding.avgPrice)}</TableCell>\r\n                    <TableCell className=\"text-right\">{formatCurrency(holding.currentPrice)}</TableCell>\r\n                    <TableCell className=\"text-right font-medium\">{formatCurrency(holding.value)}</TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      <span className={holding.gainLoss >= 0 ? \"text-green-600\" : \"text-red-600\"}>\r\n                        {formatCurrency(holding.gainLoss)}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      <Badge \r\n                        variant={holding.gainLossPercent >= 0 ? \"default\" : \"destructive\"}\r\n                        className={holding.gainLossPercent >= 0 ? \"bg-green-100 text-green-800\" : \"\"}\r\n                      >\r\n                        {formatPercent(holding.gainLossPercent)}\r\n                      </Badge>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1478, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/components/portfolio/PerformanceChart.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../ui/card\";\r\nimport { Skeleton } from \"../ui/skeleton\";\r\nimport { Alert, AlertDescription } from \"../ui/alert\";\r\nimport { AlertCircle } from \"lucide-react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from \"recharts\";\r\n\r\ninterface PerformanceData {\r\n  timeline: Array<{\r\n    date: string;\r\n    portfolio: number;\r\n    nifty50: number;\r\n    gold: number;\r\n  }>;\r\n  returns: {\r\n    portfolio: { \"1month\": number; \"3months\": number; \"1year\": number };\r\n    nifty50: { \"1month\": number; \"3months\": number; \"1year\": number };\r\n    gold: { \"1month\": number; \"3months\": number; \"1year\": number };\r\n  };\r\n}\r\n\r\nexport default function PerformanceChart() {\r\n  const [performance, setPerformance] = useState<PerformanceData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchPerformance();\r\n  }, []);\r\n\r\n  const fetchPerformance = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/portfolio/performance\");\r\n      if (!response.ok) throw new Error(\"Failed to fetch performance data\");\r\n      const data = await response.json();\r\n      setPerformance(data);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Unknown error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat(\"en-IN\", {\r\n      style: \"currency\",\r\n      currency: \"INR\",\r\n      maximumFractionDigits: 0,\r\n      notation: \"compact\"\r\n    }).format(value);\r\n  };\r\n\r\n  const formatPercent = (value: number) => {\r\n    return `${value.toFixed(2)}%`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <Skeleton className=\"h-4 w-32\" />\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Skeleton className=\"h-64 w-full\" />\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"destructive\">\r\n        <AlertCircle className=\"h-4 w-4\" />\r\n        <AlertDescription>{error}</AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (!performance) return null;\r\n\r\n  const chartData = performance.timeline.map(item => ({\r\n    ...item,\r\n    date: new Date(item.date).toLocaleDateString(\"en-IN\", { month: \"short\", year: \"numeric\" })\r\n  }));\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-background border rounded-lg p-3 shadow-lg\">\r\n          <p className=\"font-medium mb-2\">{label}</p>\r\n          {payload.map((entry: any, index: number) => (\r\n            <p key={index} style={{ color: entry.color }}>\r\n              {entry.dataKey === \"portfolio\" && `Portfolio: ${formatCurrency(entry.value)}`}\r\n              {entry.dataKey === \"nifty50\" && `Nifty 50: ${entry.value.toLocaleString()}`}\r\n              {entry.dataKey === \"gold\" && `Gold: ${formatCurrency(entry.value)}`}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Performance Timeline</CardTitle>\r\n          <CardDescription>Portfolio performance vs benchmarks over time</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"h-64\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <LineChart data={chartData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis tickFormatter={formatCurrency} />\r\n                <Tooltip content={<CustomTooltip />} />\r\n                <Legend />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"portfolio\" \r\n                  stroke=\"#2563eb\" \r\n                  strokeWidth={2}\r\n                  dot={{ r: 4 }}\r\n                />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"nifty50\" \r\n                  stroke=\"#dc2626\" \r\n                  strokeWidth={2}\r\n                  dot={{ r: 4 }}\r\n                />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"gold\" \r\n                  stroke=\"#f59e0b\" \r\n                  strokeWidth={2}\r\n                  dot={{ r: 4 }}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Returns Comparison</CardTitle>\r\n          <CardDescription>Performance metrics across different time periods</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"font-semibold text-blue-600\">Portfolio</h4>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span>1 Month:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.portfolio[\"1month\"])}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>3 Months:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.portfolio[\"3months\"])}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>1 Year:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.portfolio[\"1year\"])}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"font-semibold text-red-600\">Nifty 50</h4>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span>1 Month:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.nifty50[\"1month\"])}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>3 Months:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.nifty50[\"3months\"])}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>1 Year:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.nifty50[\"1year\"])}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"font-semibold text-amber-600\">Gold</h4>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span>1 Month:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.gold[\"1month\"])}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>3 Months:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.gold[\"3months\"])}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>1 Year:</span>\r\n                  <span className=\"font-medium\">{formatPercent(performance.returns.gold[\"1year\"])}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2140, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/OneDrive/Desktop/portfolio-analytics-dashboard/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"../app/components/ui/card\";\nimport { Badge } from \"../app/components/ui/badge\";\nimport { Skeleton } from \"../app/components/ui/skeleton\";\nimport { Alert, AlertDescription } from \"../app/components/ui/alert\";\nimport { AlertCircle } from \"lucide-react\";\nimport AssetAllocation from \"../app/components/portfolio/AssetAllocation\";\nimport HoldingsTable from \"../app/components/portfolio/HoldingsTable\";\nimport PerformanceChart from \"../app/components/portfolio/PerformanceChart\";\n\ninterface PortfolioSummary {\n  totalValue: number;\n  totalInvested: number;\n  totalGainLoss: number;\n  totalGainLossPercent: number;\n  topPerformer: {\n    symbol: string;\n    name: string;\n    gainPercent: number;\n  };\n  worstPerformer: {\n    symbol: string;\n    name: string;\n    gainPercent: number;\n  };\n  diversificationScore: number;\n  riskLevel: string;\n}\n\nexport default function Home() {\n  const [summary, setSummary] = useState<PortfolioSummary | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchSummary = async () => {\n      try {\n        const response = await fetch(\"/api/portfolio/summary\");\n        if (!response.ok) throw new Error(\"Failed to fetch portfolio summary\");\n        const data = await response.json();\n        setSummary(data);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : \"Unknown error\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSummary();\n  }, []);\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat(\"en-IN\", {\n      style: \"currency\",\n      currency: \"INR\",\n      maximumFractionDigits: 0,\n    }).format(value);\n  };\n\n  const formatPercent = (value: number) => {\n    return `${value.toFixed(2)}%`;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container mx-auto p-6 space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <Card key={i}>\n              <CardHeader>\n                <Skeleton className=\"h-4 w-20\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-8 w-32\" />\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      </div>\n    );\n  }\n\n  if (!summary) return null;\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <div className=\"flex flex-col gap-2\">\n        <h1 className=\"text-3xl font-bold tracking-tight text-center\">\n          Portfolio Dashboard\n        </h1>\n        <p className=\"text-muted-foreground text-center\">\n          Comprehensive view of your investment portfolio\n        </p>\n      </div>\n\n      {/* Portfolio Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total Portfolio Value\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {formatCurrency(summary.totalValue)}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total Gain/Loss\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div\n              className={`text-2xl font-bold ${\n                summary.totalGainLoss >= 0 ? \"text-green-600\" : \"text-red-600\"\n              }`}\n            >\n              {formatCurrency(summary.totalGainLoss)}\n            </div>\n            <p\n              className={`text-xs ${\n                summary.totalGainLossPercent >= 0\n                  ? \"text-green-600\"\n                  : \"text-red-600\"\n              }`}\n            >\n              {formatPercent(summary.totalGainLossPercent)}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total Invested\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {formatCurrency(summary.totalInvested)}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Risk Level</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center gap-2\">\n              <Badge\n                variant={\n                  summary.riskLevel === \"Low\"\n                    ? \"secondary\"\n                    : summary.riskLevel === \"Moderate\"\n                    ? \"default\"\n                    : \"destructive\"\n                }\n              >\n                {summary.riskLevel}\n              </Badge>\n              <span className=\"text-sm text-muted-foreground\">\n                Score: {summary.diversificationScore}/10\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Top Performers Section */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Top Performer</CardTitle>\n            <CardDescription>\n              Best performing stock in your portfolio\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">{summary.topPerformer.name}</span>\n                <Badge\n                  variant=\"default\"\n                  className=\"bg-green-100 text-green-800\"\n                >\n                  {formatPercent(summary.topPerformer.gainPercent)}\n                </Badge>\n              </div>\n              <p className=\"text-sm text-muted-foreground\">\n                Symbol: {summary.topPerformer.symbol}\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Worst Performer</CardTitle>\n            <CardDescription>\n              Underperforming stock in your portfolio\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">\n                  {summary.worstPerformer.name}\n                </span>\n                <Badge variant=\"destructive\">\n                  {formatPercent(summary.worstPerformer.gainPercent)}\n                </Badge>\n              </div>\n              <p className=\"text-sm text-muted-foreground\">\n                Symbol: {summary.worstPerformer.symbol}\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Asset Allocation */}\n      <div className=\"space-y-4\">\n        <h2 className=\"text-2xl font-bold tracking-tight\">Asset Allocation</h2>\n        <AssetAllocation />\n      </div>\n\n      {/* Holdings Table */}\n      <div className=\"space-y-4\">\n        <h2 className=\"text-2xl font-bold tracking-tight\">\n          Portfolio Holdings\n        </h2>\n        <HoldingsTable />\n      </div>\n\n      {/* Performance Chart */}\n      <div className=\"space-y-4\">\n        <h2 className=\"text-2xl font-bold tracking-tight\">\n          Performance Analysis\n        </h2>\n        <PerformanceChart />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2754, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}